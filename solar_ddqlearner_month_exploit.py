from solar_ddqnlearner_exploit import DDQNAgent
from solar_ddqlearner_september import get_month
import random
import gym
from gym.envs.registration import registry, register, make, spec
# Deep Q-learning Agent
import simple_solar_env
import solar_sensor_env
import functools
if __name__ == "__main__":
    # initialize gym environment and the agent
    import sys
    nepisodes = int(sys.argv[1])
    fname = sys.argv[2]
    recordname = sys.argv[3]
    #solarrecord = simple_solar_env.emulate_solar_ts(365)
    #solarfname = 'training_12'
    solarfname='testing'
    solarrecord = solar_sensor_env.get_generated_power(solarfname)
    monthrecord = get_month(solarrecord,8)
    register(
    id='SolarGraphSensor-v0',
    entry_point='solar_sensor_env:SolarGraphSensorEnv',
    kwargs = {'max_batt':10,'num_sensors':16, 'deltat':3,'solarpowerrecord':monthrecord, 'recordname':recordname}
    )
    env = gym.make('SolarGraphSensor-v0')
    agent = DDQNAgent(env,n_episodes = nepisodes,fname=fname, max_env_steps=365*8)
    agent.run()